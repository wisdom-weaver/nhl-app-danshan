{"version":3,"sources":["static/bettorsight-logo.svg","components/Layout.js","utils/utils.js","components/LargeLogo.js","components/SmallLogo.js","views/HomePage.js","store/actions/teamStatsActions.js","components/stats_cards_components/stats_cards_components.js","components/stats_cards_components/hockey-nhl-tabs/MatchTab.js","components/stats_cards_components/hockey-nhl-tabs/InjuriesTab.js","components/stats_cards_components/hockey-nhl-tabs/OddsTab.js","components/stats_cards_components/hockey-nhl-tabs/TrendsTab.js","components/stats_cards_components/hockey-nhl-tabs/StreaksTab.js","views/StatsTabsCard.js","components/StatsCardWrapper.js","views/InjuriesPage.js","views/PowerRankingsPage.js","components/stats_cards_components/hockey-nhl-tabs/PowerRankingsTab.js","views/TeamPage.js","App.js","store/reducers/teamStatsReducer.js","components/stats_cards_components/hockey-nhl-tabs/hockey_nhl_stats_ob.js","store/reducers/rootReducer.js","components/ScrollToTop.js","index.js"],"names":["ButtonLinks","className","to","Layout","props","redirect_btn","target","href","src","bettorsightLogo","alt","children","get_team_key","team","category","subcategory","rows","base_game_data","categories","subcategories","teamsData","row","teamAliases","reduce","acc","ea","toLowerCase","includes","err","get_team_data","get_team_data_from_any_name","teamKey","get_all_teams_names","Object","keys","get_n_with_sign","n","Math","sign","abs","parseFloat","LargeLogo","image","bgColor","style","backgroundColor","SmallLogo","TeamLink","size","align","teamName","teamImg","color1","color2","replace","HomePage","all_teams_data","map","background","padding","height","width","overflow","borderRadius","transform","split","reverse","set_status_at_key_action","obj","dispach","getState","type","console","log","message","BarLine","left","right","colorA","colorB","side","opacity","TeamBar","teamA","teamB","teamA_Img","teamB_Img","midTitle","SingleStat","statLeft","statRight","statTitle","barBottomText","show_line","lval","rval","get_n","higher_better","a","b","lower_better","structure_raw_row_from_key_mapping","raw","key_mapping","key_init","key_final","$t","key_mapping_matchup","key_head","side_eval","key_mapping_matchup_sag","key_mapping_md","structure_matchup_data","data_ar","raw_matchup","feed","entry","raw_matchup_md","raw_matchup_sag","rating","ranking","team_md","_","groupBy","entries","md","fromEntries","str_matchup","keyBy","merge","final_str_matchup","stat_structure","stat_key","MatchupTab","statA","statB","matchA","stats","matchup","matchB","display_key_mapping","slice","length","stat_row","TeamMatchup","match","useSelector","state","teamStats","boxShadow","heads_ar","TeamMatchupMD","disp_mapping","get_ar_from_key_heads_md","eamd","get_ar_from_key_heads","head_ar","mapping","concat","head","find","StatPair","paddingLeft","paddingRight","StatPairCollection","ind","key_mapping_injuries","InjuriesTab","injuriesA","injuries","injuriesB","useState","team_Img","injuries_big_ar","player","position","updated","injury","injurystatus","positionno","colSpan","TeamInjuries","showTeam","key_mapping_odds","OddsTab","oddsA","key_mapping_trends","TrendsTab","trendsA","trends","trendsB","show_trends","borderBottom","TeamTrends","key_mapping_streaks","StreaksTab","streaks","streak","dispatch_structured_data","structured_data","store","dispatch","post_fetch_api_at_stat_key","structure_data","status_key","StatsTabsCard","get_each_config","config","key","ob","apis","status_update","i","fetch","then","resp","json","data","push","catch","compose","connect","useDispatch","configs","inti_once","set_inti_once","status","useEffect","forEach","set_a","setTimeout","InjuriesJSX","teams","rankings_all","InjuriesPage","injuries_all","loaded","search","set_search","value","onChange","e","trim","sorted","teaminjs","count","inj","word","filter","sort","EachPowerRankingRow","PowerRankingsJSX","PowerRankingsPage","teamob","sortBy","key_mapping_powerrankings","TeamPowerRankings","display_r","inp","TeamPage","teamid","useRouteMatch","params","teamData","powerrankings","exact","path","initialState","hockey","nhl","odds","raw_odds","str_odds","raw_injuries","str_injuries","raw_streaks","str_streaks","game","raw_trends","str_trends","raw_powerrankings","str_powerrankings","tabs","title","component","rootReducer","combineReducers","action","ScrollToTop","prevProps","this","location","window","scrollTo","React","Component","withRouter","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0ef27e10.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/bettorsight-logo.d52d7cc2.svg\";","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport bettorsightLogo from \"../static/bettorsight-logo.svg\";\n\nfunction Layout(props) {\n  const redirect_btn = (\n    <>\n      <h5 className=\"center\">BEST NHL ODDS</h5>\n      <div className=\"center\">\n        <a target=\"_blank\" href=\"https://jgexchange.com/bet.html/\">\n          <div className=\"btn black-btn\">click here</div>\n        </a>\n      </div>\n    </>\n  );\n  return (\n    <div className=\"\">\n      <div className=\"logo-continer\">\n        <img src={bettorsightLogo} alt=\"\" />\n      </div>\n      <div className=\"row-flex \">\n        <NavLink to=\"/\">\n          <div className=\"btn large-btn black-btn m5\">NHL</div>\n        </NavLink>\n        <a target=\"_blank\" href=\"http://bettorsight.com/nba/\">\n          <div className=\"btn large-btn  black-btn m5\">NBA</div>\n        </a>\n      </div>\n      <div className=\"rankings-container\">\n        <div className=\"row\">\n          <div className=\"col s12\">\n            <div className=\"side-card top-side-card\">{redirect_btn}</div>\n          </div>\n          <div className=\"col s12 m10 offset-m1 l8 offset-l2\">\n            {props.children}\n          </div>\n          <div className=\"col s12 m10 offset-m1 l2 side-card side-side-card\">\n            {redirect_btn}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport const ButtonLinks = () => {\n  return (\n    <>\n      <div className=\"col s12\">\n        <div className=\"row-flex \">\n          <NavLink to=\"/\">\n            <div className=\"btn large-btn black-btn m5\">NHL Home</div>\n          </NavLink>\n          <NavLink to=\"/injuries\">\n            <div className=\"btn large-btn black-btn m5\">Injuries</div>\n          </NavLink>\n          <NavLink to=\"/powerrankings\">\n            <div className=\"btn large-btn black-btn m5\">Power Rankings</div>\n          </NavLink>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Layout;\n","import base_game_data from '../static/BaseGamesData/base_game_data.json'\n\nconst fetch_data = (url) => {\n  return new Promise((resolve, reject) => {\n    return fetch(url)\n      .then((resp) => resp.json())\n      .then((data) => resolve(data));\n  });\n};\n\nexport const get_sheet_url = ({ sheet_id, sheet_no }) =>\n  `https://spreadsheets.google.com/feeds/list/${sheet_id}/${sheet_no}/public/values?alt=json`;\n\n// export const get_colors_combo = ({ colorsA, colorsB }) => {\n//   try {\n//     const colorsA = colorsA.map((ea) => ea.split(1));\n//     const colorsB = colorsB.map((ea) => ea.split(1));\n//     const diffs = [\n//       (parseInt(colorsA[0], 16)+0.05) / (parseInt(colorsB[0], 16)+0.05),\n//       (parseInt(colorsA[0], 16)+0.05) / (parseInt(colorsB[1], 16)+0.05),\n//       (parseInt(colorsA[1], 16)+0.05) / (parseInt(colorsB[0], 16)+0.05),\n//       (parseInt(colorsA[1], 16)+0.05) / (parseInt(colorsB[1], 16)+0.05),\n//     ];\n//     var indicies = diffs.findIndex((diff) => diff == Math.max(...diffs));\n//     indicies =\n//       (indicies == 0 && [0, 0]) ||\n//       (indicies == 1 && [0, 1]) ||\n//       (indicies == 2 && [1, 0]) ||\n//       (indicies == 3 && [1, 1]) ||\n//       console.log({ indicies });\n//     if (!(colorsA[indicies[0]] == 0 || colorsB[indicies[1]] == 0)) {\n//       var colorA_final = \"#\" + colorsA[indicies[0]];\n//       var colorB_final = \"#\" + colorsB[indicies[1]];\n//       return { colorA: colorA_final, colorB: colorB_final };\n//     }\n//   } catch (err) {\n//     return { colorA: colorsA[0], colorB: colorsB[0] };\n//   }\n// };\n\nexport const calc_color_contrast = (a,b)=>{\n  a = parseInt(a, 16)+0.05;\n  b = parseInt(b, 16)+0.05;\n  return (a>b)?a/b:b/a;  \n}\nexport const get_colors_combo = ({ colorsA, colorsB }) => {\n  try {\n    var colorsA = colorsA.map((ea) => ea.slice(1));\n    var colorsB = colorsB.map((ea) => ea.slice(1));\n    // console.log('in get_combo\\n');\n    // console.log('colorsA : ', colorsA);\n    // console.log('colorsB : ', colorsB);\n    const diffs = [\n      calc_color_contrast(colorsA[0], colorsB[0]),\n      calc_color_contrast(colorsA[0], colorsB[1]),\n      calc_color_contrast(colorsA[1], colorsB[0]),\n      calc_color_contrast(colorsA[1], colorsB[1]),\n    ];\n    // console.log('diffs');\n    // console.log(diffs.map((ea, ind)=>{\n    //   const [a, b] = [parseInt(ind/2), parseInt(ind%2)];\n    //   return `${ind}= ${a} ${b} (${parseInt(colorsA[a],16)}  ${parseInt(colorsB[b],16)})=> ${ea}`\n    // }).join('\\n'));\n    var indicies = diffs.findIndex((diff) => diff == Math.max(...diffs));\n    // console.log({indicies})\n    indicies = [ parseInt(indicies/2), parseInt(indicies%2) ];\n    // console.log({ indicies });\n    var colorA_final = \"#\" + colorsA[indicies[0]];\n    var colorB_final = \"#\" + colorsB[indicies[1]];\n    return { colorA: colorA_final, colorB: colorB_final };\n  } catch (err) {\n    // return { colorA: null, colorB: null, err:err.message };\n    return { colorA: colorsA[0], colorB: colorsB[0] };\n  }\n};\n\n\nexport const get_team_key = ({team, category, subcategory})=>{\n  if(!team) return team;\n  // console.log('get_team_key = ', {team, category, subcategory})\n  try{\n    var rows = base_game_data.categories[category].subcategories[subcategory].teamsData\n    for(var row in rows){\n      var check = rows[row].teamAliases.reduce((acc, ea)=>acc||ea.toLowerCase().includes(team.toLowerCase()), false);\n      if(check) return row;\n    }\n    return team;\n  }catch(err){\n    return team;\n  }\n}\n\nexport const get_team_data = ({team, category, subcategory}) => {\n  try{\n    // console.log('get_team_data = ', {team, category, subcategory})\n    return base_game_data.categories[category].subcategories[subcategory].teamsData[team] || [];\n  }catch(err){\n    return {}\n  }\n};\n\nexport const get_team_data_from_any_name = ({team, category, subcategory})=>{\n  var teamKey = get_team_key({team, category, subcategory})\n  // console.log({ team, teamKey })\n  return get_team_data({ team: teamKey, category, subcategory})\n}\n\nexport const get_all_teams_names = ({category, subcategory}) => {\n  try{ return Object.keys(base_game_data.categories[category].subcategories[subcategory].teamsData) }\n  catch(err){ return {} }\n}\n\nexport const get_n_with_sign = (n)=>{\n  var sign = Math.sign(n)==-1?'-':'+'\n  var abs_n = Math.abs(parseFloat(n));\n  return sign+abs_n;\n}","import React from 'react'\n\nfunction LargeLogo(props) {\n    const {image, bgColor= 'transparent'} = props\n    return (\n        <div className=\"large-logo-container\" style={{\n            backgroundColor: bgColor\n         }}>\n            <img src={image} />\n        </div>\n    )\n}\n\nexport default LargeLogo\n","import React from 'react'\n\nfunction SmallLogo(props) {\n    const {image} = props\n    return (\n        <div className=\"small-logo-container\">\n            <img src={image} />\n        </div>\n    )\n}\n\nexport default SmallLogo\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport LargeLogo from \"../components/LargeLogo\";\nimport { ButtonLinks } from \"../components/Layout\";\nimport SmallLogo from \"../components/SmallLogo\";\nimport {\n  get_all_teams_names,\n  get_team_data,\n  get_team_data_from_any_name,\n} from \"../utils/utils\";\n\nconst [category, subcategory] = [\"hockey\", \"nhl\"];\n\nexport const TeamLink = ({\n  team,\n  category = \"hockey\",\n  subcategory = \"nhl\",\n  size = \"small\",\n  align = \"left\",\n}) => {\n  const { teamName, teamImg, color1, color2 } = get_team_data_from_any_name({\n    category,\n    subcategory,\n    team,\n  });\n  return (\n    <NavLink to={`/team/${teamName?.replace(\" \", \"_\")}`}>\n      <div\n        className={`\n        row-flex\n        black-text\n        ${align == \"left\" && \"justify-flex-start\"}\n        ${align == \"center\" && \"\"}\n      `}\n      >\n        {size == \"small\" && (\n          <>\n            <SmallLogo image={teamImg} />\n            <span className=\"bold center\">{teamName}</span>\n          </>\n        )}\n        {size == \"large\" && (\n          <>\n            <LargeLogo image={teamImg} />\n            <h5 className=\"bold center\">{teamName}</h5>\n          </>\n        )}\n      </div>\n    </NavLink>\n  );\n};\n\nfunction HomePage() {\n  const all_teams_data = get_all_teams_names({\n    category,\n    subcategory,\n  }).map((team) => get_team_data({ team, category, subcategory }));\n  // console.log(all_teams_data);\n  return (\n    <div>\n      <h1 className=\"center\">NHL</h1>\n      <div className=\"row\">\n        <ButtonLinks />\n      </div>\n      <div className=\"\">\n        <div className=\"row-flex wrap jusitfy-content-space-between mb-0px\">\n          {all_teams_data.map((team) => (\n            <>\n              <NavLink to={`/team/${team.teamName.replace(\" \", \"_\")}`}>\n                <div\n                  className=\"card round-card m5 cursor-pointer mb-0px\"\n                  style={{ background: team.color1 }}\n                >\n                  <div className=\"card-content mb-0px\">\n                    <div className=\"col-flex\">\n                      <div\n                        className=\"large-logo-container\"\n                        style={{\n                          backgroundColor: \"white\",\n                          padding: \"10px\",\n                          height: \"100px\",\n                          width: \"100px\",\n                          overflow: \"hidden\",\n                          borderRadius: \"25px\",\n                        }}\n                      >\n                        <img src={team.teamImg} />\n                      </div>\n                      <h6 style={{transform:'translateY(8px)'}} className=\"head white-text m3 mb-0px\">\n                        {(team.teamName || \"\")?.split(\" \").reverse()[0]}\n                      </h6>\n                    </div>\n                  </div>\n                </div>\n              </NavLink>\n            </>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default HomePage;\n","export const updateTeamStatsAction = (obj) => {\n  return (dispach, getState) => {\n    // console.log('in updateTeamStatsAction', obj)\n    return dispach({\n      type: \"SET_TEAM_STATS_DATA_FOR_SUBCAT\",\n      ...obj,\n    });\n  };\n};\n\nexport const set_stats_at_key_action = (obj) => {\n  return (dispach, getState) => {\n    try{\n      return dispach({ type: \"SET_STATS_AT_KEY\", ...obj });\n    }catch(err){\n      console.log('err in updateTeamStatsAction', obj)\n    }\n  };\n};\n\nexport const set_status_at_key_action = (obj) => {\n  return (dispach, getState) => {\n    try{\n      return dispach({ type: \"SET_STATUS_AT_KEY\", ...obj });\n    }catch(err){\n      console.log('err in updateTeamStatsAction', obj, err.message)\n    }\n  };\n};\n\nexport const updateGameStreaksAction = (obj) => {\n  return (dispach, getState) => {\n    // console.log('in updateGameStreaksAction', obj)\n    return dispach({\n      type: \"SET_GAME_STREAKS_DATA_FOR_SUBCAT\",\n      ...obj,\n    });\n  };\n};\n\nexport const get_team_stats_at_key_only_action = ({ team, category, subcategory, key }) => {\n  return (dispach, getState) => {\n    try {\n      return getState().teamStats[category][subcategory].stats[key][team];\n    } catch (err) {\n      return [];\n    }\n  };\n};\nexport const get_all_team_stats_action = (ob) => {\n  return (dispach, getState) => {\n    const { team, category, subcategory, keys } = ob;\n    const store = getState();\n    try {\n      return  Object.fromEntries(\n        keys.map(key=>[key, dispach(get_team_stats_at_key_only_action({...ob, key}))])\n      )\n      \n    } catch (err) {\n      return [];\n    }\n  };\n};\n","import React from 'react';\nimport LargeLogo from '../LargeLogo';\n\nexport const BarLine = (props) => {\n  const { left, right, colorA, colorB, side } = props;\n  return (\n    <div className=\"row-flex barline\">\n      <div\n        style={{\n          backgroundColor: colorA,\n          width: `${left - 0.3}%`,\n          opacity: side != -1 ? (side == 0 ? \"1\" : \"0.2\") : \"1\",\n        }}\n        className=\"bar-left mh-10px\"\n      ></div>\n      <div\n        style={{ backgroundColor: \"white\", width: `${0.6}%` }}\n        className=\"bar-left mh-10px\"\n      ></div>\n      <div\n        style={{\n          backgroundColor: colorB,\n          width: `${right - 0.3}%`,\n          opacity: side != -1 ? (side == 1 ? \"1\" : \"0.2\") : \"1\",\n        }}\n        className=\"bar-right mh-10px\"\n      ></div>\n    </div>\n  );\n};\n\nexport const TeamBar = ({ teamA, teamB, teamA_Img, teamB_Img, midTitle }) => {\n  return (\n    <div className=\"row-flex justify-space-between\">\n      <div className=\"col-flex\">\n        <LargeLogo image={teamA_Img} />\n        <span className=\"bold center\">{teamA}</span>\n      </div>\n      <h5 className=\"center\">{midTitle}</h5>\n      <div className=\"col-flex\">\n        <LargeLogo image={teamB_Img} />\n        <span className=\"bold center\">{teamB}</span>\n      </div>\n    </div>\n  );\n};\n\nexport const SingleStat = ({\n  statLeft,\n  statRight,\n  statTitle,\n  barBottomText,\n  colorA,\n  colorB,\n  side = -1,\n  show_line = false,\n  lval = 50,\n  rval = 50,\n}) => {\n  const left = (lval * 100) / (lval + rval);\n  const right = (rval * 100) / (lval + rval);\n  return (\n    <div className=\"SingleStatContainer w-100\">\n      <div className=\"row-flex justify-space-between\">\n        <span>{statLeft}</span>\n        <span className=\"bold\">{statTitle}</span>\n        <span>{statRight}</span>\n      </div>\n      {show_line && <BarLine {...{ left, right, colorA, colorB, side }} />}\n      {barBottomText && <p className=\"center grey-text\">{barBottomText}</p>}\n      {!barBottomText && <div className=\"spacing-5px\"></div>}\n    </div>\n  );\n};\n\nexport const get_n = (n) => {\n  parseFloat(n?.split(\" \")?.reverse()[0] || '')\n};\nexport const higher_better = (a, b) => {\n  a = get_n(a);\n  b = get_n(b);\n  return a > b ? 0 : 1;\n};\nexport const lower_better = (a, b) => {\n  a = get_n(a);\n  b = get_n(b);\n  return b > a ? 0 : 1;\n};\nexport const both = (a, b) => -1;\n\n\nexport const structure_raw_row_from_key_mapping = ({raw, key_mapping})=>(\n  raw.map((row) =>key_mapping.reduce((acc,{ key_init, key_final }) => ({ ...acc, [key_final]: row[key_init]?.$t }),{}))\n)","import React from \"react\";\nimport _ from \"lodash\";\nimport {\n  both,\n  higher_better,\n  lower_better,\n  get_n,\n  SingleStat,\n  structure_raw_row_from_key_mapping,\n  TeamBar,\n} from \"../stats_cards_components\";\nimport { get_all_teams_names, get_n_with_sign, get_team_data_from_any_name, get_team_key } from \"../../../utils/utils\";\nimport { useSelector } from \"react-redux\";\n\nconst category = \"hockey\";\nconst subcategory = \"nhl\";\n\nconst key_mapping_matchup = [\n  {\n    key_head: \"Team\",\n    key_init: \"gsx$teams\",\n    key_final: \"team\",\n    side_eval: null,\n  },\n  {\n    key_head: \"Shots\",\n    key_final: \"shots\",\n    key_init: \"gsx$sdb\",\n    side_eval: higher_better,\n  },\n  {\n    key_head: \"Penalties\",\n    key_final: \"penalties\",\n    key_init: \"gsx$_d6ua4\",\n    side_eval: lower_better,\n  },\n  {\n    key_head: \"Pen Minutes\",\n    key_final: \"pen_minutes\",\n    key_init: \"gsx$_d88ul\",\n    side_eval: lower_better,\n  },\n  {\n    key_head: \"P1\",\n    key_final: \"p1\",\n    key_init: \"gsx$_dkvya\",\n    side_eval: higher_better,\n  },\n  {\n    key_head: \"P2\",\n    key_final: \"p2\",\n    key_init: \"gsx$team\",\n    side_eval: higher_better,\n  },\n  {\n    key_head: \"P3\",\n    key_final: \"p3\",\n    key_init: \"gsx$_dnp34\",\n    side_eval: higher_better,\n  },\n  {\n    key_head: \"Total\",\n    key_final: \"total\",\n    key_init: \"gsx$_dp3nl\",\n    side_eval: higher_better,\n  },\n  {\n    key_head: \"Opp Shots\",\n    key_final: \"opp_shots\",\n    key_init: \"gsx$_df9om\",\n    side_eval: lower_better,\n  },\n  {\n    key_head: \"Opp Penalties\",\n    key_final: \"opp_penalties\",\n    key_init: \"gsx$_dgo93\",\n    side_eval: higher_better,\n  },\n  {\n    key_head: \"Opp Pen Minutes\",\n    key_final: \"opp_pen_minutes\",\n    key_init: \"gsx$opp\",\n    side_eval: higher_better,\n  },\n  {\n    key_head: \"Opp P1\",\n    key_final: \"opp_p1\",\n    key_init: \"gsx$_djhdx\",\n    side_eval: lower_better,\n  },\n  {\n    key_head: \"Opp P2\",\n    key_final: \"opp_p2\",\n    key_init: \"gsx$_dw4je\",\n    side_eval: lower_better,\n  },\n  {\n    key_head: \"Opp P3\",\n    key_final: \"opp_p3\",\n    key_init: \"gsx$_dxj3v\",\n    side_eval: lower_better,\n  },\n  {\n    key_head: \"Opp Total\",\n    key_final: \"opp_total\",\n    key_init: \"gsx$_dyxo8\",\n    side_eval: lower_better,\n  },\n];\n\nconst key_mapping_matchup_sag = [\n  {\n    key_head: \"Team\",\n    key_init: \"gsx$team\",\n    key_final: \"team\",\n    side_eval: null,\n  },\n  {\n    key_head: \"Power Ranking\",\n    key_init: \"gsx$danshanranking\",\n    key_final: \"ranking\",\n    side_eval: lower_better,\n  },\n  {\n    key_head: \"Sagarin Rating\",\n    key_init: \"gsx$sagarin\",\n    key_final: \"rating\",\n    side_eval: lower_better,\n  },\n];\n\nconst key_mapping_md = [\n  {\n    key_init: \"gsx$_chk2m\",\n    key_head: \"Team\" ,\n    key_final: \"team_md\" ,\n  },\n  {\n    key_init: \"gsx$_ciyn3\",\n    key_head: \"OPP\" ,\n    key_final: \"opp\" ,\n  },\n  {\n    key_init: \"gsx$_ckd7g\",\n    key_head: \"Site\" ,\n    key_final: \"site\" ,\n  },\n  {\n    key_init: \"gsx$_clrrx\",\n    key_head: \"Final\" ,\n    key_final: \"final\" ,\n  },\n  {\n    key_init: \"gsx$_cyevm\",\n    key_head: \"Line\",\n    key_final: \"line\",\n  },\n  {\n    key_init: \"gsx$_cztg3\",\n    key_head: \"Total\" ,\n    key_final: \"total\" ,\n  },\n  {\n    key_init: \"gsx$prdata\",\n    key_head: \"Date\" ,\n    key_final: \"date\" ,\n  }  \n]\n\nexport const structure_matchup_data = (data_ar) => {\n  try {\n    var raw_matchup = data_ar[0].feed.entry;\n    var raw_matchup_md = data_ar[0].feed.entry;\n    // console.log(\"raw_matchup\", raw_matchup);\n    var raw_matchup_sag = data_ar[1].feed.entry;\n    // console.log(\"raw_matchup_sag\", raw_matchup_sag);\n\n    raw_matchup = structure_raw_row_from_key_mapping({\n      raw: raw_matchup,\n      key_mapping: key_mapping_matchup,\n    });\n    raw_matchup = raw_matchup.map((ea) => ({\n      ...ea,\n      team: get_team_key({ team: ea.team, category, subcategory }),\n    }));\n    raw_matchup_sag = structure_raw_row_from_key_mapping({\n      raw: raw_matchup_sag,\n      key_mapping: key_mapping_matchup_sag,\n    });\n    raw_matchup_sag = raw_matchup_sag.map((ea) => ({\n      ...ea,\n      team: get_team_key({ team: ea.team, category, subcategory }),\n      rating : get_n_with_sign(ea.rating),\n      ranking : get_n_with_sign(ea.ranking),\n    }));\n\n    // console.log(\"raw_matchup=>\", raw_matchup);\n\n    // console.log('raw_matchup_md', raw_matchup_md);\n    raw_matchup_md = structure_raw_row_from_key_mapping({\n      raw: raw_matchup_md,\n      key_mapping: key_mapping_md,\n    });\n    raw_matchup_md = raw_matchup_md.map((ea) => ({\n      ...ea,\n      team: get_team_key({ team: ea.team_md, category, subcategory }),\n    }));\n    raw_matchup_md = _.groupBy(raw_matchup_md, \"team\");\n    raw_matchup_md = Object.entries(raw_matchup_md);\n    raw_matchup_md = raw_matchup_md.map(([key, ob])=>([key, {md:ob}]));\n    raw_matchup_md = Object.fromEntries(raw_matchup_md);\n\n    // console.log('raw_matchup_md', raw_matchup_md);\n    \n    var str_matchup = _.keyBy(\n      _.merge(_.keyBy(raw_matchup, \"team\"), _.keyBy(raw_matchup_sag, \"team\")),\n      \"team\"\n    );\n\n    var final_str_matchup = get_all_teams_names({ category, subcategory });\n    final_str_matchup = final_str_matchup.map(team=>([team, { ...str_matchup[team], ...raw_matchup_md[team] } ]))\n    final_str_matchup = Object.fromEntries(final_str_matchup);\n    \n    delete final_str_matchup[\"\"];\n    delete final_str_matchup[\"Team\"];\n\n    // console.log(\"str_matchup=>\", str_matchup);\n    // console.log('final_str_matchup', final_str_matchup)\n    return { stat_structure: final_str_matchup, stat_key: \"matchup\" };\n  } catch (err) {\n    return { stat_structure: {}, stat_key: \"matchup\" };\n  }\n};\n\nexport const MatchupTab = ({ statA, statB }) => {\n  const { teamA, teamA_Img, colorA } = statA;\n  const matchA = (statA && statA?.stats?.matchup) || {};\n  const { teamB, teamB_Img, colorB } = statB;\n  const matchB = (statB && statB?.stats?.matchup) || {};\n  // console.log('matchup tab', matchA, matchB)\n  \n  const display_key_mapping = [\n    ...key_mapping_matchup_sag.slice(1),\n    ...key_mapping_matchup.slice(1),\n  ];\n\n  return (matchA && Object.keys(matchA).length != 0) ||\n    (matchB && Object.keys(matchB).length != 0) ? (\n    <div className=\"card-content\">\n      <TeamBar\n        midTitle={\"Matchup\"}\n        {...{ teamA, teamA_Img, teamB, teamB_Img }}\n      />\n      <div className=\"bottom-margin-30px\"></div>\n      {display_key_mapping.map((stat_row) => (\n        <>\n          <div className=\"spacing-10px\"></div>\n          <SingleStat\n            statLeft={matchA && matchA[stat_row.key_final]}\n            statRight={matchB && matchB[stat_row.key_final]}\n            side={\n              stat_row.side_eval\n                ? stat_row.side_eval(\n                    get_n(matchA[stat_row.key_final]),\n                    get_n(matchB[stat_row.key_final])\n                  )\n                : -1\n            }\n            show_line={true}\n            statTitle={stat_row.key_head}\n            {...{ colorA, colorB }}\n          />\n        </>\n      ))}\n\n      <div className=\"bottom-margin-30px\"></div>\n    </div>\n  ) : (\n    <div className=\"card-content\">\n      <p className=\"flow-text center\">No Data Fetched at the moment</p>\n    </div>\n  );\n};\n\n\nexport const TeamMatchup = ({ team, category, subcategory }) => {\n  const { teamImg, color1, color2 } = get_team_data_from_any_name({\n    team,\n    category,\n    subcategory,\n  });\n  const match = useSelector((state) => {\n    try {\n      return state.teamStats[category][subcategory].stats[\"matchup\"][team];\n    } catch (err) {\n      return [];\n    }\n  });\n\n  const p_heads = [\n    \"P1\",\n    \"P2\",\n    \"P3\",\n    \"Total\",\n  ];\n  const opp_p_heads = [\n    \"Opp P1\",\n    \"Opp P2\",\n    \"Opp P3\",\n    \"Opp Total\",\n  ];\n  const odds_heads = [\n    \"Shots\",\n    \"Penalties\",\n    \"Pen Minutes\",\n  ];\n  const opp_odds_heads = [\n    \"Opp Shots\",\n    \"Opp Penalties\",\n    \"Opp Pen Minutes\",\n  ];\n\n  return (\n    <div className=\"card round-card\"\n    style={{ boxShadow: `0 0px 5px 0 ${color1}`}}>\n      <div className=\"card-content\">\n        {match && Object.keys(match).length != 0 ? (\n          <>\n            <div className=\"row-flex justify-space-around\">\n              {/* <TeamLink {...{team, size:'large',}}/> */}\n            </div>\n            <div className=\"bottom-margin-30px\"></div>\n            <div className=\"row-flex justify-space-around\">\n              {/* <TeamLink {...{team, size:'large',}}/> */}\n              <h5 className=\"head\">Team Stats</h5>\n            </div>\n            <div className=\"spacing-20px\"></div>\n            <div className=\"row mb-5px\">\n              <div className=\"col s6\">\n                <div className=\"row mb-0px\">\n                  <StatPairCollection heads_ar={p_heads} {...{ match }} />\n                </div>\n              </div>\n              <div className=\"col s6\">\n                <div className=\"row mb-0px\">\n                  <StatPairCollection heads_ar={opp_p_heads} {...{ match }} />\n                </div>\n              </div>\n            </div>\n            <div className=\"row mb-0px\">\n              <div className=\"col s6\">\n                <div className=\"row\">\n                  <StatPairCollection heads_ar={odds_heads} {...{ match }} />\n                </div>\n              </div>\n              <div className=\"col s6\">\n                <div className=\"row\">\n                  <StatPairCollection\n                    heads_ar={opp_odds_heads}\n                    {...{ match }}\n                  />\n                </div>\n              </div>\n            </div>\n          </>\n        ) : (\n          <p className=\"flow-text center\">No Data Fetched at the moment</p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport const TeamMatchupMD = ({ team, category, subcategory }) => {\n  const { teamImg, color1, color2 } = get_team_data_from_any_name({\n    team,\n    category,\n    subcategory,\n  });\n  const md = useSelector((state) => {\n    try {\n      return state.teamStats[category][subcategory].stats[\"matchup\"][team].md;\n    } catch (err) {\n      return [];\n    }\n  });\n  const disp_mapping = get_ar_from_key_heads_md(['OPP','Site','Final','Line','Total','Date'])\n  return (\n    <div className=\"card round-card\"\n    style={{ boxShadow: `0 0px 5px 0 ${color1}`}}>\n      <div className=\"card-content\">\n        <h5 className=\"center head\">Latest Games</h5>\n        {(md && md.length != 0) ? (\n          <table>\n            <tbody>\n              <tr>\n                {disp_mapping?.map(({key_head})=>( <th>{key_head}</th> ))}\n              </tr>\n              {md.map(eamd=>(\n              <tr>\n                {disp_mapping?.map(({key_final})=>( <td>{eamd[key_final]}</td> ))}\n              </tr>\n              ))}\n            </tbody>\n          </table>\n        ) : (\n          <p className=\"flow-text center\">No Data Fetched at the moment</p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nconst get_ar_from_key_heads = (head_ar) => {\n  const mapping = key_mapping_matchup.concat(key_mapping_matchup_sag);\n  return head_ar.map((head) => _.find(mapping, { key_head: head }));\n};\nconst get_ar_from_key_heads_md = (head_ar) => {\n  const mapping = key_mapping_md.concat(key_mapping_matchup_sag);\n  return head_ar.map((head) => _.find(mapping, { key_head: head }));\n};\n\nconst StatPair = ({ stat_row, match }) => {\n  return (\n    <>\n      <div\n        style={{ paddingLeft: \"25px\", paddingRight: \"25px\" }}\n        className=\"row-flex justify-space-between\"\n      >\n        <span className=\"head\">{stat_row?.key_head}</span>\n        <span>{match[stat_row?.key_final]}</span>\n      </div>\n      <div className=\"spacing-20px\"></div>\n    </>\n  );\n};\n\nconst StatPairCollection = ({ heads_ar, match }) => {\n  return (\n    <>\n      {get_ar_from_key_heads(heads_ar).map((stat_row, ind) => (\n        <div className=\"col s12 l6\">\n          {\" \"}\n          <StatPair {...{ match, stat_row }} />{\" \"}\n        </div>\n      ))}\n    </>\n  );\n};","import React from 'react'\nimport _ from \"lodash\";\nimport { useState } from \"react\";\nimport LargeLogo from \"../../LargeLogo\";\nimport { structure_raw_row_from_key_mapping } from \"../stats_cards_components\";\nimport { get_team_data_from_any_name, get_team_key } from '../../../utils/utils';\nimport { TeamLink } from '../../../views/HomePage';\nimport { useSelector } from 'react-redux';\n\nconst category= 'hockey';\nconst subcategory = 'nhl';\n\nconst key_mapping_injuries = [\n  {\n    key_head: \"Team\",\n    key_init: \"gsx$team\",\n    key_final: \"team\",\n  },\n  {\n    key_head: \"Player\",\n    key_init: \"gsx$player\",\n    key_final: \"player\",\n  },\n  {\n    key_head: \"Position\",\n    key_init: \"gsx$position\",\n    key_final: \"position\",\n  },\n  {\n    key_head: \"Updated\",\n    key_init: \"gsx$updated\",\n    key_final: \"updated\",\n  },\n  {\n    key_head: \"Injury\",\n    key_init: \"gsx$injury\",\n    key_final: \"injury\",\n  },\n  {\n    key_head: \"Injury Status\",\n    key_init: \"gsx$injurystatus\",\n    key_final: \"injurystatus\",\n  },\n  {\n    key_head: \"PositionNo\",\n    key_init: \"gsx$positionno\",\n    key_final: \"positionno\",\n  },\n];\n\nexport const structure_injuries_data = (data_ar) => {\n  var raw_injuries = data_ar[0].feed.entry;\n  raw_injuries = structure_raw_row_from_key_mapping({\n    raw: raw_injuries,\n    key_mapping: key_mapping_injuries,\n  });\n  raw_injuries = raw_injuries.map(ea=>({ ...ea, team: get_team_key({team:ea.team, category, subcategory}) }));\n  \n  // console.log(\"raw_injuries\", raw_injuries);\n\n  var str_injuries = _.groupBy(raw_injuries, \"team\");\n  delete str_injuries[\"\"];\n  // console.log(\"str_injuries\", str_injuries);\n  return { stat_structure: str_injuries, stat_key: \"injuries\" };\n};\n\nexport const InjuriesTab = ({ statA, statB }) => {\n  const { teamA, teamA_Img, colorA } = statA;\n  const injuriesA = (statA && statA?.stats?.injuries) || [];\n  const { teamB, teamB_Img, colorB } = statB;\n  const injuriesB = (statB && statB?.stats?.injuries) || [];\n  const [injuries_big_ar, set_in_big] = useState([\n    { injuries: injuriesA, team_Img: teamA_Img, team: teamA },\n    { injuries: injuriesB, team_Img: teamB_Img, team: teamB },\n  ] || []);\n  // console.log(\"injuries_big_ar\", injuries_big_ar);\n  // console.log(\"injuries\", {injuriesA, injuriesB});\n  // return <></>\n  return (\n    <div className=\"card-content\">\n      {/* <h5 className=\"center\">Injuries</h5> */}\n      {injuries_big_ar && injuries_big_ar?.map(({ injuries, team_Img = '', team= '' }) => (\n        <>\n          <div className=\"row-flex flex-start\">\n            <LargeLogo image={team_Img} />\n            <h5 className=\"bold center\">{team}</h5>\n          </div>\n          <div className=\"spacing-10px\"></div>\n\n          {injuries && injuries?.length != 0 ? (\n            <>\n              <div className=\"hide-on-small-only\">\n                <table>\n                  <tbody>\n                    <tr>\n                      <th>Player</th>\n                      <th>Pos/Imp</th>\n                      <th>Updated</th>\n                      <th>Injury</th>\n                      <th>Injury Status</th>\n                    </tr>\n                    {injuries &&\n                      injuries?.map(\n                        ({\n                          player,\n                          position,\n                          updated,\n                          injury,\n                          injurystatus,\n                          positionno,\n                        }) => (\n                          <>\n                            <tr>\n                              <th>{player}</th>\n                              <td>\n                                {position}/{positionno}\n                              </td>\n                              <td>{updated}</td>\n                              <td>{injury}</td>\n                              <td>{injurystatus}</td>\n                            </tr>\n                          </>\n                        )\n                      )}\n                  </tbody>\n                </table>\n              </div>\n              <div className=\"hide-on-med-and-up\">\n                <table className=\"small-table\">\n                  <tbody>\n                    <tr>\n                      <th>Player</th>\n                      <th>Pos/Imp</th>\n                      <th>Updated</th>\n                      <th>Injury</th>\n                    </tr>\n                    {injuries && injuries?.map(\n                      ({\n                        player,\n                        position,\n                        updated,\n                        injury,\n                        injurystatus,\n                        positionno,\n                      }) => (\n                        <>\n                          <tr>\n                            <th>{player}</th>\n                            <td>\n                              {position}/{positionno}\n                            </td>\n                            <td>{updated}</td>\n                            <td>{injury}</td>\n                          </tr>\n                          <tr>\n                            <td colSpan=\"4\">\n                              <span className=\"head\">Status: </span>\n                              {injurystatus}\n                            </td>\n                          </tr>\n                        </>\n                      )\n                    )}\n                  </tbody>\n                </table>\n              </div>\n            </>\n          ) : (\n            <h6 className=\"center head\">No Injuries</h6>\n          )}\n        </>\n      ))}\n    </div>\n  );\n};\n\nexport const TeamInjuries = ({ team, category, subcategory, showTeam=true }) => {\n  const { teamImg, color1} = get_team_data_from_any_name({\n    team,\n    category,\n    subcategory,\n  });\n  // const injuries = []\n  const injuries = useSelector((state) => {\n    try {\n      return state.teamStats[category][subcategory].stats.injuries[team];\n    } catch (err) {\n      return [];\n    }\n  });\n  // console.log(team, injuries);\n  return (\n    <>\n      <div className=\"card round-card\"\n        style={{ boxShadow: `0 0px 5px 0 ${color1}`}}\n      >\n        <div className=\"card-content\">\n          {showTeam && <TeamLink {...{team, size:'large', align:'center'}}/>}\n          {!showTeam && <h5 className=\"center head\">Injury Report</h5>}\n          <div className=\"spacing-10px\"></div>\n\n          {injuries && injuries?.length != 0 ? (\n            <>\n              <div className=\"hide-on-small-only\">\n                <table>\n                  <tbody>\n                    <tr>\n                      <th>Player</th>\n                      <th>Pos/Imp</th>\n                      <th>Updated</th>\n                      <th>Injury</th>\n                      <th>Injury Status</th>\n                    </tr>\n                    {injuries &&\n                      injuries?.map(\n                        ({\n                          player,\n                          position,\n                          updated,\n                          injury,\n                          injurystatus,\n                          positionno,\n                        }) => (\n                          <>\n                            <tr>\n                              <th>{player}</th>\n                              <td>\n                                {position}/{positionno}\n                              </td>\n                              <td>{updated}</td>\n                              <td>{injury}</td>\n                              <td>{injurystatus}</td>\n                            </tr>\n                          </>\n                        )\n                      )}\n                  </tbody>\n                </table>\n              </div>\n              <div className=\"hide-on-med-and-up\">\n                <table className=\"small-table\">\n                  <tbody>\n                    <tr>\n                      <th>Player</th>\n                      <th>Pos/Imp</th>\n                      <th>Updated</th>\n                      <th>Injury</th>\n                    </tr>\n                    {injuries &&\n                      injuries?.map(\n                        ({\n                          player,\n                          position,\n                          updated,\n                          injury,\n                          injurystatus,\n                          positionno,\n                        }) => (\n                          <>\n                            <tr>\n                              <th>{player}</th>\n                              <td>\n                                {position}/{positionno}\n                              </td>\n                              <td>{updated}</td>\n                              <td>{injury}</td>\n                            </tr>\n                            <tr>\n                              <td colSpan=\"4\">\n                                <span className=\"head\">Status: </span>\n                                {injurystatus}\n                              </td>\n                            </tr>\n                          </>\n                        )\n                      )}\n                  </tbody>\n                </table>\n              </div>\n            </>\n          ) : (\n            <h6 className=\"center head\">No Injuries</h6>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};","import React from 'react'\nimport _ from \"lodash\";\nimport LargeLogo from \"../../LargeLogo\";\nimport { SingleStat, structure_raw_row_from_key_mapping } from \"../stats_cards_components\";\nimport { get_team_data_from_any_name, get_team_key } from '../../../utils/utils';\nimport { useSelector } from 'react-redux';\n\nconst category = 'hockey';\nconst subcategory = 'nhl';\n\nconst key_mapping_odds = [\n  {\n    key_head: \"Team\",\n    key_init: \"gsx$team\",\n    key_final: \"team\",\n  },\n  {\n    key_init: \"gsx$open\",\n    key_final: \"open\",\n    key_head: \"Open\",\n  },\n  {\n    key_init: \"gsx$consensus\",\n    key_final: \"consensus\",\n    key_head: \"Consensus\",\n  },\n  {\n    key_init: \"gsx$betmgm\",\n    key_final: \"betmgm\",\n    key_head: \"Betmgm\",\n  },\n  {\n    key_init: \"gsx$sportsbetting\",\n    key_final: \"sportsbetting\",\n    key_head: \"Sports Betting\",\n  },\n  {\n    key_init: \"gsx$wynn\",\n    key_final: \"wynn\",\n    key_head: \"Wynn\",\n  },\n  {\n    key_init: \"gsx$wh\",\n    key_final: \"wh\",\n    key_head: \"WH\",\n  },\n  {\n    key_init: \"gsx$gn\",\n    key_final: \"gn\",\n    key_head: \"GN\",\n  },\n  {\n    key_init: \"gsx$dk\",\n    key_final: \"dk\",\n    key_head: \"DK\",\n  },\n  {\n    key_init: \"gsx$circa\",\n    key_final: \"circa\",\n    key_head: \"Circa\",\n  },\n];\n\nexport const structure_odds_data = (data_ar) => {\n  var raw_odds = data_ar[0].feed.entry;\n  // console.log(category, subcategory, {raw_odds});\n  raw_odds = structure_raw_row_from_key_mapping({\n    raw: raw_odds,\n    key_mapping: key_mapping_odds,\n  });\n  raw_odds = raw_odds.map(ea=>({ ...ea, team: get_team_key({team: ea.team,category, subcategory}) }));\n  // console.log(\"raw_odds\", raw_odds);\n  var str_odds = _.keyBy(raw_odds, \"team\");\n  delete str_odds[\"\"];\n  // console.log(\"str_odds\", str_odds);\n  return { stat_structure: str_odds, stat_key: \"odds\" };\n};\n\nexport const OddsTab = ({ statA, statB }) => {\n  const { teamA, teamA_Img, colorA } = statA;\n  const oddsA = (statA && statA?.stats[\"odds\"]) || {};\n  const { teamB, teamB_Img, colorB } = statB;\n  const oddsB = (statB && statB?.stats[\"odds\"]) || {};\n  // console.log(\"odds\", { oddsA, oddsB });\n  // return <></>\n  return (\n    <div className=\"card-content\">\n      {oddsA && Object.keys(oddsA).length != 0 ? (\n        <>\n          <div className=\"row-flex align-\">\n            <div className=\"col-flex w-200px justify-flex-start\">\n              <LargeLogo image={teamA_Img} />\n              <span className=\"bold center\">{teamA}</span>\n            </div>\n            <h5 className=\"center\">vs</h5>\n            <div className=\"col-flex w-200px justify-flex-start\">\n              <LargeLogo image={teamB_Img} />\n              <span className=\"bold center\">{teamB}</span>\n            </div>\n          </div>\n          <div className=\"spacing-20px\"></div>\n          <h5 className=\"center\">Odds</h5>\n          <div className=\"spacing-20px\"></div>\n          <div className=\"m-auto max_w-250px\">\n            {key_mapping_odds.map(({ key_head, key_final }) => (\n              <>\n                <SingleStat\n                  statLeft={key_head}\n                  statRight={oddsA[key_final]}\n                  lval={20}\n                  rval={80}\n                  // statTitle={key_head}\n                  {...{ colorA, colorB }}\n                />\n                <div className=\"spacing-10px\"></div>\n              </>\n            ))}\n          </div>\n        </>\n      ) : (\n        <h5 className=\"center\">No Odds yet</h5>\n      )}\n    </div>\n  );\n};\n\nexport const TeamOdds = ({ team, category, subcategory }) => {\n  const { teamImg, color1 } = get_team_data_from_any_name({\n    team,\n    category,\n    subcategory,\n  });\n  const odds = useSelector((state) => {\n    try {\n      return state.teamStats[category][subcategory].stats[\"odds\"][team];\n    } catch (err) {\n      return [];\n    }\n  });\n  // return <></>\n  return (\n    <div className=\"card round-card\"\n      style={{ boxShadow: `0 0px 5px 0 ${color1}`}}\n    >\n      <div className=\"card-content\">\n        {odds && Object.keys(odds).length != 0 ? (\n          <>\n            <div className=\"row-flex align-\">\n              <div className=\"col-flex w-200px justify-flex-start\">\n                <LargeLogo image={teamImg} />\n                <span className=\"bold center\">{team}</span>\n              </div>\n            </div>\n            <div className=\"spacing-20px\"></div>\n            <h5 className=\"center\">Odds</h5>\n            <div className=\"spacing-20px\"></div>\n            <div className=\"m-auto max_w-250px\">\n              {key_mapping_odds.map(({ key_head, key_final }) => (\n                <>\n                  <SingleStat\n                    statLeft={key_head}\n                    statRight={odds[key_final]}\n                    lval={20}\n                    rval={80}\n                    // statTitle={key_head}\n                    // {...{ colorA, colorB }}\n                  />\n                  <div className=\"spacing-10px\"></div>\n                </>\n              ))}\n            </div>\n          </>\n        ) : (\n          <h5 className=\"center\">No Odds yet</h5>\n        )}\n      </div>\n    </div>\n  );\n};\n","import React from 'react'\nimport _ from \"lodash\";\nimport LargeLogo from \"../../LargeLogo\";\nimport {\n  SingleStat,\n  structure_raw_row_from_key_mapping,\n  TeamBar,\n} from \"../stats_cards_components\";\nimport { get_team_data_from_any_name, get_team_key } from '../../../utils/utils';\nimport { useSelector } from 'react-redux';\n\nconst category = \"hockey\";\nconst subcategory = 'nhl';\n\nconst key_mapping_trends = [\n  {\n    key_head: \"Team\",\n    key_final: \"team\",\n    key_init: \"gsx$team\",\n  },\n  {\n    key_head:\"W/L\", \n    key_final:\"wl\",\n    key_init:\"gsx$wl\",\n  },\n  {\n    key_head:\"Streak\", \n    key_final:\"streak\",\n    key_init:\"gsx$streak\",\n  },\n  {\n    key_head:\"ML Op\", \n    key_final:\"mlop\",\n    key_init:\"gsx$mlop\",\n  },\n  {\n    key_head:\"T Op\", \n    key_final:\"top\",\n    key_init:\"gsx$top\",\n  },\n  {\n    key_head:\"Cur ML\", \n    key_final:\"curml\",\n    key_init:\"gsx$curml\",\n  },\n  {\n    key_head:\"Cur Ttl\", \n    key_final:\"curttl\",\n    key_init:\"gsx$curttl\",\n  },\n  {\n    key_head:\"Puck\", \n    key_final:\"puck\",\n    key_init:\"gsx$puck\",\n  },\n  {\n    key_head:\"ML\", \n    key_final:\"ml\",\n    key_init:\"gsx$ml\",\n  },\n  {\n    key_head:\"O/U\", \n    key_final:\"ou\",\n    key_init:\"gsx$ou\",\n  },\n];\n\nexport const structure_trends_data = (data_ar) => {\n  var raw_trends = data_ar[0].feed.entry;\n  raw_trends = structure_raw_row_from_key_mapping({\n    raw: raw_trends,\n    key_mapping: key_mapping_trends,\n  });\n  raw_trends = raw_trends.map(ea=>({ ...ea, team: get_team_key({team: ea.team, category, subcategory}) }));\n\n  // console.log(\"raw_trends\", raw_trends);\n  var str_trends = _.keyBy(raw_trends, \"team\");\n  delete str_trends[\"\"];\n  // console.log(\"str_trends\", str_trends);\n  return { stat_structure: str_trends, stat_key: \"trends\" };\n};\n\nexport const TrendsTab = ({ statA, statB }) => {\n  const { teamA, teamA_Img, colorA } = statA;\n  const trendsA = (statA && statA?.stats?.trends) || {};\n  const { teamB, teamB_Img, colorB } = statB;\n  const trendsB = (statB && statB?.stats?.trends) || {};\n  // console.log(\"trends\", { trendsA, trendsB },);\n  // return <></>\n  const show_trends = key_mapping_trends.slice(1);\n  return (trendsA && Object.keys(trendsA).length != 0) ||\n    (trendsB && Object.keys(trendsB).length != 0) ? (\n    <div className=\"card-content\">\n      <TeamBar\n        midTitle={\"Trends\"}\n        {...{ teamA, teamA_Img, teamB, teamB_Img }}\n      />\n      <div className=\"bottom-margin-30px\"></div>\n      <table className=\"hide-on-small-only\">\n        <tbody>\n          <tr>\n            <th>Team</th>\n            {show_trends.map(({ key_head, key_final }) => (\n              <th>{key_head}</th>\n            ))}\n          </tr>\n          {(trendsA && Object.keys(trendsA).length != 0) &&\n          <tr>\n            <td style={{ borderBottom: `3px solid ${colorA}` }}>\n              {trendsA[\"team\"]}\n            </td>\n            {show_trends.map(({ key_head, key_final }) => (\n              <td>{trendsA[key_final]}</td>\n            ))}\n          </tr>}\n          {(trendsB && Object.keys(trendsB).length != 0) &&\n          <tr>\n            <td style={{ borderBottom: `4px solid ${colorB}` }}>\n              {trendsB[\"team\"]}\n            </td>\n            {show_trends.map(({ key_head, key_final }) => (\n              <td>{trendsB[key_final]}</td>\n            ))}\n          </tr>}\n        </tbody>\n      </table>\n      <table className=\"hide-on-med-and-up\">\n        <tbody>\n          {key_mapping_trends.map(({ key_head, key_final }) => (\n            <SingleStat\n              statLeft={trendsA[key_final]}\n              statRight={trendsB[key_final]}\n              show_line={true}\n              statTitle={key_head}\n              {...{ colorA, colorB }}\n            />\n          ))}\n        </tbody>\n      </table>\n    </div>\n  ) : (\n    <div className=\"card-content\">\n      <p className=\"flow-text center\">No Trends at the moment</p>\n    </div>\n  );\n};\n\nexport const TeamTrends = ({ team, category, subcategory }) => {\n  const { teamImg, color1, color2 } = get_team_data_from_any_name({\n    team,\n    category,\n    subcategory,\n  });\n  const trends = useSelector((state) => {\n    try {\n      return state.teamStats[category][subcategory].stats[\"trends\"][team];\n    } catch (err) {\n      return [];\n    }\n  });\n  const show_trends = key_mapping_trends.slice(1);\n  // return <></>\n  return (\n    <div className=\"card round-card\"\n    style={{ boxShadow: `0 0px 5px 0 ${color1}`}}\n    >\n      <div className=\"card-content\">\n        {trends && Object.keys(trends).length != 0 ? (\n          <>\n          <table className=\"hide-on-small-only\">\n          <tbody>\n            <tr>\n              <th>Team</th>\n              {show_trends.map(({ key_head, key_final }) => (\n                <th>{key_head}</th>\n              ))}\n            </tr>\n            <tr>\n              <td style={{ borderBottom: `3px solid ${color1}` }}>\n                {trends[\"team\"]}\n              </td>\n              {show_trends.map(({ key_head, key_final }) => (\n                <td>{trends[key_final]}</td>\n              ))}\n            </tr>\n          </tbody>\n        </table>\n        <table className=\"hide-on-med-and-up\">\n          <tbody>\n            {show_trends.map(({ key_head, key_final }) => (\n              <SingleStat\n                statLeft={trends[key_final]}\n                // statRight={trendsB[key_final]}\n                show_line={true}\n                statTitle={key_head}\n                {...{ color1, color2 }}\n              />\n            ))}\n          </tbody>\n        </table>\n        </>\n        ) : (\n          <h5 className=\"center\">No Trends yet</h5>\n        )}\n      </div>\n    </div>\n  );\n};\n","import React from 'react'\nimport _ from \"lodash\";\nimport LargeLogo from \"../../LargeLogo\";\nimport {\n  SingleStat,\n  structure_raw_row_from_key_mapping,\n  TeamBar,\n} from \"../stats_cards_components\";\nimport { get_team_key } from '../../../utils/utils';\n\nconst category = 'hockey'; \nconst subcategory = 'nhl' ;\n\nconst key_mapping_streaks = [\n  { key_init: \"gsx$game\", key_final: \"game\", key_head: \"Game\" },\n  { key_init: \"gsx$streaks\", key_final: \"streaks\", key_head: \"Streaks\" },\n];\n\nexport const structure_streaks_data = (data_ar) => {\n  var raw_streaks = data_ar[0].feed.entry;\n  // console.log({raw_streaks})\n  raw_streaks = structure_raw_row_from_key_mapping({\n    raw: raw_streaks,\n    key_mapping: key_mapping_streaks,\n  });\n  // console.log({raw_streaks})\n  \n  const str_streaks = raw_streaks.reduce((acc,{game,streaks})=>{\n    if(!game) return acc;\n    var [a,b] = game.trim().split(' vs ');\n    var game_id= `${get_team_key({team:a, category, subcategory})}@${get_team_key({team:b, category, subcategory})}`;\n    \n    // console.log(game, game_id);\n    game = game_id;\n\n    return {\n      ...acc,\n      [game]:[\n        ...(acc[game] || []),\n        streaks\n      ]\n    }\n  },{})\n  delete str_streaks[\"\"];\n  // console.log(\"str_streaks\", str_streaks);\n  \n  return { stat_structure: str_streaks, stat_key: \"streaks\" };\n};\n\nexport const StreaksTab = ({ statA, statB, streaks }) => {\n  const { teamA, teamA_Img, colorA } = statA;\n  const { teamB, teamB_Img, colorB } = statB;\n  // console.log('streaks=>',streaks);\n  // return <></>\n  return (\n    <div className=\"card-content streaks-tab\">\n      <TeamBar\n        midTitle={\"Streaks\"}\n        {...{ teamA, teamA_Img, teamB, teamB_Img }}\n      />\n      {streaks && streaks?.length > 0 ? (\n        streaks?.map((streak) => (\n          <>\n            <div className=\"spacing-20px\"></div>\n            <p>{streak}</p>\n            <div className=\"spacing-5px\"></div>\n            <hr />\n          </>\n        ))\n      ) : (\n        <h5 className=\"center head\">No Streaks</h5>\n      )}\n    </div>\n  );\n};","import { relativeTimeRounding } from \"moment\";\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { Tabs, Tab } from \"react-materialize\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { store } from \"..\";\nimport LargeLogo from \"../components/LargeLogo\";\nimport SmallLogo from \"../components/SmallLogo\";\nimport {\n  MatchupTab,\n  structure_matchup_data,\n} from \"../components/stats_cards_components/hockey-nhl-tabs/MatchTab\";\nimport { InjuriesTab } from \"../components/stats_cards_components/hockey-nhl-tabs/InjuriesTab\";\nimport { OddsTab } from \"../components/stats_cards_components/hockey-nhl-tabs/OddsTab\";\nimport {\n  both,\n  higher_better,\n  lower_better,\n  SingleStat,\n  TeamBar,\n} from \"../components/stats_cards_components/stats_cards_components\";\nimport {\n  get_all_team_stats_action,\n  get_team_stats_at_key_only_action,\n  set_stats_at_key_action,\n  set_status_at_key_action,\n} from \"../store/actions/teamStatsActions\";\nimport { get_colors_combo, get_team_data_from_any_name } from \"../utils/utils\";\nimport { TrendsTab } from \"../components/stats_cards_components/hockey-nhl-tabs/TrendsTab\";\nimport { StreaksTab } from \"../components/stats_cards_components/hockey-nhl-tabs/StreaksTab\";\n\nexport const dispatch_structured_data = ({\n  category,\n  subcategory,\n  structured_data,\n}) => {\n  var { stat_key, stat_structure } = structured_data;\n  return store.dispatch(\n    set_stats_at_key_action({\n      category,\n      subcategory,\n      stat_key,\n      stat_structure,\n    })\n  );\n};\nexport const dispatch_status_loaded = ({ category, subcategory, stat_key }) => {\n  return store.dispatch(\n    set_status_at_key_action({\n      category,\n      subcategory,\n      status_key: stat_key,\n      status_update: \"loaded\",\n    })\n  );\n};\nexport const post_fetch_api_at_stat_key = ({\n  data_ar,\n  structure_data,\n  category,\n  subcategory,\n}) => {\n  const structured_data = structure_data(data_ar);\n  const { status_key } = structured_data;\n  dispatch_structured_data({\n    category,\n    subcategory,\n    structured_data,\n  });\n};\n\nconst get_team_stats = ({ team, configs, category, subcategory, stats }) => {\n  if (!stats) return {};\n  var ar = Object.keys(configs).map(([key]) => [\n    [key],\n    [stats[key][team]] || null,\n  ]);\n  return Object.entries(ar);\n};\n\nfunction StatsTabsCard(props) {\n  // console.log(\"StatsTabCard 2\");\n  const dispatch = useDispatch();\n\n  const { category, subcategory, GameID, teamsData } = props;\n  // console.log(category, subcategory, GameID)\n  var [teamA_mini, teamB_mini] = GameID.split(\"@\").map(\n    (ea) => ea.split(\" \").reverse()[0]\n  );\n  const configs = {\n    matchup: {\n      apis: [\n        // match_api,\n        \"https://spreadsheets.google.com/feeds/list/1cUcZSRXi5ksKsHqTnQGTtWkhflNbxUpTTwaPmLv-cmk/1/public/values?alt=json\",\n        // sag_api\n        \"https://spreadsheets.google.com/feeds/list/1cUcZSRXi5ksKsHqTnQGTtWkhflNbxUpTTwaPmLv-cmk/4/public/values?alt=json\",\n      ],\n      structure_data: structure_matchup_data,\n    },\n  };\n  const { stats, status } = useSelector(\n    (store) => store.teamStats[category][subcategory]\n  );\n  if (!stats)\n    return (\n      <>\n        <div className=\"row\">\n          <div className=\"col s12\">\n            <div className=\"card round-card\">\n              <div className=\"card-content\">\n                <h1 className=\"center\">Loading...</h1>\n              </div>\n            </div>\n          </div>\n        </div>\n      </>\n    );\n\n  const team_dataA = get_team_data_from_any_name({team: teamA_mini, category, subcategory});\n  const team_dataB = get_team_data_from_any_name({team: teamB_mini, category, subcategory});\n  const keys = [\"matchup\", \"injuries\", \"odds\", \"trends\"];\n\n  const { colorA, colorB } = get_colors_combo({\n    colorsA: [team_dataA.color1, team_dataA.color2],\n    colorsB: [team_dataB.color1, team_dataB.color2],\n  });\n\n  const statA = {\n    teamA: team_dataA.teamName,\n    teamA_Img: team_dataA.teamImg,\n    colorA,\n    stats: dispatch(\n      get_all_team_stats_action({\n        team: teamA_mini,\n        category,\n        subcategory,\n        keys,\n      })\n    ),\n  };\n  const statB = {\n    teamB: team_dataB.teamName,\n    teamB_Img: team_dataB.teamImg,\n    colorB,\n    stats: dispatch(\n      get_all_team_stats_action({\n        team: teamB_mini,\n        category,\n        subcategory,\n        keys,\n      })\n    ),\n  };\n\n  const streak_game_id = `${teamA_mini}@${teamB_mini}`;\n  const streaks = (() => {\n    try {\n      return stats[\"streaks\"][streak_game_id];\n    } catch (err) {\n      return [];\n    }\n  })();\n\n  // console.log(\"stats\", { statA, statB });\n  // console.log(\"streaks\", streak_game_id, streaks);\n\n  return (\n    <>\n      <div className=\"row\">\n        <div className=\"col s12 m12\">\n          <div className=\"card round-card\">\n            <div className=\"card-content\">\n              {status[\"trends\"] == \"loaded\" &&\n                statA &&\n                statB &&\n                statA?.stats[\"trends\"] &&\n                statB?.stats[\"trends\"] && <TrendsTab {...{ statA, statB }} />}\n            </div>\n          </div>\n        </div>\n        <div className=\"col s12 m6\">\n          <div className=\"card round-card\">\n            <div className=\"card-content\">\n              {status[\"matchup\"] == \"loaded\" &&\n                statA &&\n                statB &&\n                statA?.stats[\"matchup\"] &&\n                statB?.stats[\"matchup\"] && <MatchupTab {...{ statA, statB }} />}\n            </div>\n          </div>\n        </div>\n        <div className=\"col s12 m6\">\n          <div className=\"card round-card\">\n            <div className=\"card-content\">\n              {status[\"injuries\"] == \"loaded\" &&\n                statA &&\n                statB &&\n                statA?.stats[\"injuries\"] &&\n                statB?.stats[\"injuries\"] && (\n                  <InjuriesTab {...{ statA, statB }} />\n                )}\n            </div>\n          </div>\n        </div>\n        <div className=\"col s12 m6\">\n          <div className=\"card round-card\">\n            <div className=\"card-content\">\n              {status[\"odds\"] == \"loaded\" &&\n                statA &&\n                statB &&\n                statA?.stats[\"odds\"] &&\n                statB?.stats[\"odds\"] && <OddsTab {...{ statA, statB }} />}\n            </div>\n          </div>\n        </div>\n        <div className=\"col s12 m6\">\n          <div className=\"card round-card\">\n            <div className=\"card-content\">\n              {status[\"streaks\"] == \"loaded\" && statA && statB && (\n                <StreaksTab {...{ statA, statB, streaks }} />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default StatsTabsCard;\n","import React, { useEffect, useState } from \"react\";\nimport { connect, useDispatch, useSelector } from \"react-redux\";\nimport { compose } from \"redux\";\nimport { set_status_at_key_action } from \"../store/actions/teamStatsActions\";\nimport {\n  dispatch_status_loaded,\n  post_fetch_api_at_stat_key,\n} from \"../views/StatsTabsCard\";\nimport { store } from \"../index\";\n\nconst get_each_config = async ({ config, category, subcategory, dispatch }) => {\n  const [key, ob] = config;\n  const { apis, structure_data } = ob;\n  var data_ar = [];\n  dispatch(\n    set_status_at_key_action({\n      category,\n      subcategory,\n      status_key: key,\n      status_update: \"loading\",\n    })\n  );\n  for (var i = 0; i < apis.length; i++) {\n    await fetch(apis[i])\n      .then((resp) => resp.json())\n      .then((data) => data_ar.push(data))\n      .catch(() => data_ar.push([]));\n  }\n  await post_fetch_api_at_stat_key({\n    data_ar,\n    category,\n    subcategory,\n    structure_data,\n  });\n  dispatch(\n    set_status_at_key_action({\n      category,\n      subcategory,\n      status_key: key,\n      status_update: \"loaded\",\n    })\n  );\n};\n\nfunction StatsCardWrapper(props) {\n  const dispatch = useDispatch();\n  const { category, subcategory, configs } = props;\n\n  const [inti_once, set_inti_once] = useState(false);\n  const {status, stats} = useSelector(({teamStats})=>teamStats[category][subcategory])\n  const init_fetch = () => {\n    var data_ar = [];\n    set_inti_once(true);\n    Object.entries(configs).forEach((config) => {\n      if(status[config[0]]=='loaded') return;\n      else get_each_config({ config, category, subcategory, dispatch });\n    });\n  };\n  useEffect(() => {\n    if (inti_once) return;\n    init_fetch();\n  }, [inti_once]);\n  const [a, set_a] = useState(false);\n  useEffect(() => {\n    setTimeout(() => {\n      set_a(true);\n    }, 3000);\n  }, [a]);\n\n  return <>{props.children}</>;\n}\n\nconst mapStateToProps = (state) => {\n  return {};\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {};\n};\n\nexport default compose(connect(mapStateToProps, mapDispatchToProps))(\n  StatsCardWrapper\n);\n","// import { functionsIn } from \"lodash\";\nimport React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\n// import GetFromAPI from \"../components/GetFromAPI\";\nimport LargeLogo from \"../components/LargeLogo\";\nimport { ButtonLinks } from \"../components/Layout\";\nimport SmallLogo from \"../components/SmallLogo\";\nimport StatsCardWrapper from \"../components/StatsCardWrapper\";\nimport { TeamInjuries } from \"../components/stats_cards_components/hockey-nhl-tabs/InjuriesTab\";\nimport { get_all_teams_names } from \"../utils/utils\";\nimport StatsTabsCard, { post_fetch_api_at_stat_key } from \"./StatsTabsCard\";\n\nconst category = 'hockey';\nconst subcategory='nhl';\n\nconst filter  = ({search, injuries_all})=>{\n  // search = search.trim()\n  if(!search) return false;\n  search = search.split(' ');;\n  \n  injuries_all = Object.entries(injuries_all);\n  injuries_all = injuries_all.map(([team, teaminjs])=>{\n    var count = 0;\n    for(var inj of teaminjs){\n      var {team, player, position, positionno, updated, injury, injurystatus} = inj;\n      search.map(word=>{\n        if(!word) return;\n        word = word.toLowerCase()\n        if(team && team.toLowerCase().includes(word)) count+=100;\n        if(player && player.toLowerCase().includes(word)) count+=25;\n        if(injury && injury.toLowerCase().includes(word)) count+=10;\n        if(updated && updated.toLowerCase().includes(word)) count+=5;\n        if(position && position.toLowerCase().includes(word)) count+=5;\n        if(injurystatus && injurystatus.toLowerCase().includes(word)) count+=5;\n      },0)\n    }\n    return {team, count}\n  })\n  var sorted = injuries_all.filter(ea=>ea.count!=0).sort((a,b)=>b.count>a.count).map(({team})=>team);\n  console.log(sorted, injuries_all);\n  return sorted;\n}\n\nconst InjuriesJSX = ({ teams, rankings_all }) => {\n  return (\n    <>\n      {(teams && teams.length>0) &&\n        teams.map(team=> <TeamInjuries {...{team, category, subcategory}}/>)\n      }\n      {(!teams || !(teams?.length>0)) && \n      <div className=\"card\">\n      <div className=\"card-content\">\n        <h5 className=\"center\">Nothing Found</h5>\n      </div>\n      </div>\n      }\n    </>\n  );\n};\n\nfunction InjuriesPage() {\n  const { configs } = useSelector(\n    ({ teamStats }) => teamStats[category][subcategory]\n  );\n  var injuries_all = useSelector(state=>{try{return state.teamStats[category][subcategory].stats.injuries}catch(err){return {}}});\n  \n  var loaded = useSelector(state=>{try{return state.teamStats[category][subcategory].status.injuries}catch(err){return false}});\n  \n  const [search, set_search ]= useState('');\n  useSelector(()=>{\n  // console.log({loaded});\n  })\n  return (\n    <div>\n      <h5 className=\"center head\">NHL Injuries</h5>\n      <div className=\"row\">\n        <ButtonLinks />\n      </div>\n      <input type=\"text\" value={search} onChange={(e)=>{set_search(e.target.value)}}/>\n      <StatsCardWrapper\n        {...{ category, subcategory, post_fetch_api_at_stat_key, configs }}\n      >\n        {loaded == 'loaded' && <>\n            {(()=>{\n              var teams;\n              if(!search || search?.trim().length==0) teams = get_all_teams_names({category, subcategory})\n              else{\n                teams = filter({search, injuries_all})\n              }\n              return <InjuriesJSX {...{teams}} />\n            })()}\n          </>\n        }\n        {\n          loaded == 'loading' && <>\n            <div className=\"card round-card\">\n              <div className=\"card-content\">\n                <h5 className=\"center\"> Loading.... </h5>\n              </div>\n            </div>\n          </>\n        }\n      </StatsCardWrapper>\n    </div>\n  );\n}\n\nexport default InjuriesPage;\n","// import { functionsIn } from \"lodash\";\nimport React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\n// import GetFromAPI from \"../components/GetFromAPI\";\nimport LargeLogo from \"../components/LargeLogo\";\nimport SmallLogo from \"../components/SmallLogo\";\nimport StatsCardWrapper from \"../components/StatsCardWrapper\";\nimport { TeamInjuries } from \"../components/stats_cards_components/hockey-nhl-tabs/InjuriesTab\";\nimport {\n  get_all_teams_names,\n  get_n_with_sign,\n  get_team_data,\n} from \"../utils/utils\";\nimport StatsTabsCard, { post_fetch_api_at_stat_key } from \"./StatsTabsCard\";\nimport { TeamLink } from \"./HomePage\";\nimport _ from \"lodash\";\nimport { ButtonLinks } from \"../components/Layout\";\n\nconst category = \"hockey\";\nconst subcategory = \"nhl\";\n\nconst filter = ({ search, rankings_all }) => {\n  // search = search.trim()\n  if (!search) return;\n  search = search.split(\" \");\n\n  rankings_all = Object.entries(rankings_all);\n  rankings_all = rankings_all.map(([team, teamob]) => {\n    var count = 0;\n    var { team, ranking } = teamob;\n    search.map((word) => {\n      if (!word) return;\n      word = word.toLowerCase();\n      if (team && team.toLowerCase().includes(word)) count += 100;\n      if (ranking && ranking.toLowerCase().includes(word)) count += 5;\n    }, 0);\n    return { team, count };\n  });\n  var sorted = rankings_all\n    .filter((ea) => ea.count != 0)\n    .sort((a, b) => b.count > a.count)\n    .map(({ team }) => team);\n  return sorted;\n};\n\nconst EachPowerRankingRow = ({ team, rankings_all }) => {\n  const { teamImg } = get_team_data({ team, category, subcategory });\n  return (\n    <>\n      <tr>\n        <td>\n          <TeamLink {...{ team }} />\n        </td>\n        <td className=\"head\">{get_n_with_sign(rankings_all[team].ranking)}</td>\n      </tr>\n    </>\n  );\n};\n\nconst PowerRankingsJSX = ({ teams, rankings_all }) => {\n  return (\n    <>\n      {teams && teams.length > 0 && (\n        <table>\n          <tr>\n            <th>Teams</th>\n            <th>PowerRankings</th>\n          </tr>\n          {teams?.map((team) => (\n            <EachPowerRankingRow {...{ team, rankings_all }} />\n          ))}\n        </table>\n      )}\n      {(!teams || !(teams?.length > 0)) && (\n        <h5 className=\"center\">Nothing Found</h5>\n      )}\n    </>\n  );\n};\n\nfunction PowerRankingsPage() {\n  const { configs } = useSelector(\n    ({ teamStats }) => teamStats[category][subcategory]\n  );\n  var rankings_all = useSelector((state) => {\n    try {\n      return state.teamStats[category][subcategory].stats[\"powerrankings\"];\n    } catch (err) {\n      return {};\n    }\n  });\n\n  const [search, set_search] = useState(\"\");\n\n  var loaded = useSelector((state) => {\n    try {\n      return state.teamStats[category][subcategory].status[\"powerrankings\"];\n    } catch (err) {\n      return false;\n    }\n  });\n\n  return (\n    <div>\n      <h5 className=\"center head\">NHL PowerRankings</h5>\n      <div className=\"row\">\n        <ButtonLinks />\n      </div>\n      <input\n        type=\"text\"\n        value={search}\n        onChange={(e) => {\n          set_search(e.target.value);\n        }}\n      />\n      <StatsCardWrapper\n        {...{ category, subcategory, post_fetch_api_at_stat_key, configs }}\n      >\n        {loaded == \"loaded\" && (\n          <>\n            <div className=\"card round-card\">\n              <div className=\"card-content\">\n                {(() => {\n                  var teams;\n                  if (!search || search?.trim().length == 0)\n                    teams = _.sortBy(rankings_all, function (ob) {\n                      return parseFloat(ob.ranking);\n                    }).map((ea) => ea.team);\n                  else {\n                    teams = filter({ search, rankings_all });\n                  }\n                  return <PowerRankingsJSX {...{ teams, rankings_all }} />;\n                })()}\n              </div>\n            </div>\n          </>\n        )}\n        {loaded == \"loading\" && (\n          <>\n            <div className=\"card round-card\">\n              <div className=\"card-content\">\n                <h5 className=\"center\"> Loading.... </h5>\n              </div>\n            </div>\n          </>\n        )}\n      </StatsCardWrapper>\n    </div>\n  );\n}\n\nexport default PowerRankingsPage;\n","import _ from \"lodash\";\nimport { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport {\n  get_n_with_sign,\n  get_team_data_from_any_name,\n  get_team_key,\n} from \"../../../utils/utils\";\nimport { TeamLink } from \"../../../views/HomePage\";\nimport LargeLogo from \"../../LargeLogo\";\nimport SmallLogo from \"../../SmallLogo\";\nimport { structure_raw_row_from_key_mapping } from \"../stats_cards_components\";\n\nconst key_mapping_powerrankings = [\n  {\n    key_head: \"Team\",\n    key_init: \"gsx$team\",\n    key_final: \"team\",\n  },\n  {\n    key_head: \"Power Ranking\",\n    key_init: \"gsx$danshanranking\",\n    key_final: \"ranking\",\n  },\n  {\n    key_head: \"Sagarin Rating\",\n    key_init: \"gsx$sagarin\",\n    key_final: \"rating\",\n  },\n];\n\nconst category = \"hockey\";\nconst subcategory = \"nhl\";\n\nexport const structure_powerrankings_data = (data_ar) => {\n  var raw_powerrankings = data_ar[0].feed.entry;\n  raw_powerrankings = structure_raw_row_from_key_mapping({\n    raw: raw_powerrankings,\n    key_mapping: key_mapping_powerrankings,\n  });\n  raw_powerrankings = raw_powerrankings.map((ea) => ({\n    ...ea,\n    team: get_team_key({ team: ea.team, category, subcategory }),\n  }));\n  var str_powerrankings = _.keyBy(raw_powerrankings, \"team\");\n  // console.log(\"raw_powerrankings\", raw_powerrankings);\n  delete str_powerrankings[\"\"];\n  // console.log(\"str_powerrankings\", str_powerrankings);\n  return { stat_structure: str_powerrankings, stat_key: \"powerrankings\" };\n};\n\nexport const TeamPowerRankings = ({ team, category, subcategory }) => {\n  const { teamName, teamImg, color1 } = get_team_data_from_any_name({\n    team,\n    category,\n    subcategory,\n  });\n  // const injuries = []\n  const ob = useSelector((state) => {\n    try {\n      return state?.teamStats[category][subcategory]?.stats[\"powerrankings\"][team];\n\n    } catch (err) {\n      return {ranking:'', rating:''};\n    }\n  });\n  const { ranking, rating } = ob || {ranking:'', rating:''};\n  const display_r = (inp)=>{\n    if(!inp) return 'N/A';\n    return get_n_with_sign(inp);\n  }\n  return (\n    <>\n      <div\n        className=\"card round-card\"\n        style={{ boxShadow: `0 0px 5px 0 ${color1}` }}\n      >\n        <div className=\"card-content\">\n          <div className=\"row-flex justify-space-around flex-wrap\">\n            <div className=\"row-flex\">\n              <h6 className=\"head m5\">PowerRanking: </h6>\n              <h6 className=\"head m5\">{display_r(ranking)}</h6>\n            </div>\n            <div className=\"row-flex\">\n              <h6 className=\"head m5\">Sagarin Rating : </h6>\n              <h6 className=\"head m5\">{display_r(rating)}</h6>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useLocation, useRouteMatch } from \"react-router\";\nimport LargeLogo from \"../components/LargeLogo\";\nimport StatsCardWrapper from \"../components/StatsCardWrapper\";\nimport { get_team_data_from_any_name } from \"../utils/utils\";\nimport StatsTabsCard, { statsPostFetchFn } from \"./StatsTabsCard\";\nimport {\n  updateGameStreaksAction,\n  updateTeamStatsAction,\n} from \"../store/actions/teamStatsActions\";\nimport { post_fetch_api_at_stat_key } from \"./StatsTabsCard\";\nimport InjuriesPage from \"./InjuriesPage\";\nimport { TeamInjuries } from \"../components/stats_cards_components/hockey-nhl-tabs/InjuriesTab\";\nimport SmallLogo from \"../components/SmallLogo\";\nimport { TeamOdds } from \"../components/stats_cards_components/hockey-nhl-tabs/OddsTab\";\nimport { TeamTrends } from \"../components/stats_cards_components/hockey-nhl-tabs/TrendsTab\";\nimport {\n  TeamMatchup,\n  TeamMatchupMD,\n} from \"../components/stats_cards_components/hockey-nhl-tabs/MatchTab\";\nimport { TeamPowerRankings } from \"../components/stats_cards_components/hockey-nhl-tabs/PowerRankingsTab\";\nimport { NavLink } from \"react-router-dom\";\nimport { ButtonLinks } from \"../components/Layout\";\n\nconst category = \"hockey\";\nconst subcategory = \"nhl\";\n\nfunction TeamPage(props) {\n  const match = useRouteMatch();\n  var { teamid } = match.params;\n  teamid = teamid?.replace(\"_\", \" \");\n  const teamData = get_team_data_from_any_name({\n    team: teamid,\n    category,\n    subcategory,\n  });\n  const { teamImg, teamName, color1, color2 } = teamData;\n  const { configs } = useSelector(\n    ({ teamStats }) => teamStats[category][subcategory]\n  );\n  const status = useSelector((state) => {\n    try {\n      return state.teamStats[category][subcategory].status;\n    } catch (err) {\n      return false;\n    }\n  });\n\n  const team_matchup = useSelector((state) => {\n    try {\n      return state.teamStats[category][subcategory].stats.matchup[teamName];\n    } catch (err) {\n      return {};\n    }\n  });\n\n  return (\n    <div className=\"\">\n      <div className=\"team-top-section\">\n        <StatsCardWrapper\n          {...{ category, subcategory, post_fetch_api_at_stat_key, configs }}\n        >\n          <div className=\"spacing-30px\"></div>\n          <div className=\"row\">\n            <div className=\"col s12 m12 l6 offset-l3\">\n              <div className=\"card round-card\" style={{ background: color1 }}>\n                <div className=\"card-content\">\n                  <div className=\"col-flex\">\n                    <div\n                      className=\"large-logo-container\"\n                      style={{\n                        backgroundColor: \"white\",\n                        padding: \"2px\",\n                        height: \"80px\",\n                        width: \"80px\",\n                        overflow: \"hidden\",\n                        borderRadius: \"15px\",\n                      }}\n                    >\n                      <img src={teamImg} />\n                    </div>\n                    <h5 className=\"head white-text\">{teamName}</h5>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <ButtonLinks />\n            {status?.powerrankings == \"loaded\" && (\n              <div className=\"col s12\">\n                <TeamPowerRankings\n                  {...{ team: teamName, category, subcategory }}\n                />\n              </div>\n            )}\n            {status?.injuries == \"loaded\" && (\n              <div className=\"col s12\">\n                <TeamInjuries {...{ team: teamName, category, subcategory, showTeam: false }} />\n              </div>\n            )}\n            {status?.matchup == \"loaded\" && (\n              <div className=\"col s12\">\n                <TeamMatchup {...{ team: teamName, category, subcategory }} />\n              </div>\n            )}\n            {status?.matchup == \"loaded\" && (\n              <div className=\"col s12\">\n                <TeamMatchupMD {...{ team: teamName, category, subcategory }} />\n              </div>\n            )}\n            {status?.trends == \"loaded\" && (\n              <div className=\"col s12\">\n                <TeamTrends {...{ team: teamName, category, subcategory }} />\n              </div>\n            )}\n          </div>\n        </StatsCardWrapper>\n      </div>\n    </div>\n  );\n}\n\nexport default TeamPage;\n","import React from \"react\";\nimport { connect, useSelector } from \"react-redux\";\nimport { Route, Switch } from \"react-router\";\nimport { BrowserRouter, HashRouter } from \"react-router-dom\";\nimport { compose } from \"redux\";\nimport Layout from \"./components/Layout\";\nimport { get_team_key } from \"./utils/utils\";\nimport HomePage from \"./views/HomePage\";\nimport InjuriesPage from \"./views/InjuriesPage\";\nimport PowerRankingsPage from \"./views/PowerRankingsPage\";\nimport TeamPage from \"./views/TeamPage\";\n\nfunction App() {\n  // console.log(get_team_key({ team:'', category:'basketball', subcategory:'nba' }));\n  return (\n    <div className=\"App\">\n      <HashRouter>\n        <Switch>\n          <Route exact path=\"/\">\n            <Layout>\n              <HomePage />\n            </Layout>\n          </Route>\n          <Route exact path=\"/injuries\">\n            <Layout>\n              <InjuriesPage />\n            </Layout>\n          </Route>\n          <Route exact path=\"/powerrankings\">\n            <Layout>\n              <PowerRankingsPage />\n            </Layout>\n          </Route>\n          <Route exact path=\"/team/:teamid\">\n            <Layout>\n              <TeamPage />\n            </Layout>\n          </Route>\n        </Switch>\n      </HashRouter>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  // console.log(\"state=>\", state);\n  return {};\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {};\n};\n\nexport default compose(connect(mapStateToProps, mapDispatchToProps))(App);\n","\nimport { hockey_nhl_stats_ob } from \"../../components/stats_cards_components/hockey-nhl-tabs/hockey_nhl_stats_ob\";\n\nconst initialState = {\n  hockey: {\n    nhl: hockey_nhl_stats_ob\n  },\n};\n\nexport const teamStatsReducer = (state = initialState, action) => {\n  // console.log(action.type);\n  switch (action.type) {\n    case \"SET_STATUS_AT_KEY\":\n      return {\n        ...state,\n        [action.category]: {\n          ...state[action.category],\n          [action.subcategory]: {\n            ...state[action.category][action.subcategory],\n            status: {\n              ...state[action.category][action.subcategory].status,\n              [action.status_key]: action.status_update,\n            },\n          },\n        },\n      };\n    case \"SET_STATS_AT_KEY\":\n      return {\n        ...state,\n        [action.category]: {\n          ...state[action.category],\n          [action.subcategory]: {\n            ...state[action.category][action.subcategory],\n            stats: {\n              ...state[action.category][action.subcategory].stats,\n              [action.stat_key]: action.stat_structure,\n            },\n          },\n        },\n      };\n    default:\n      return state;\n  }\n};\n","import { structure_odds_data, OddsTab } from \"./OddsTab\";\nimport { structure_injuries_data, InjuriesTab } from \"./InjuriesTab\";\nimport { structure_streaks_data, StreaksTab } from \"./StreaksTab\";\nimport { structure_trends_data, TrendsTab } from \"./TrendsTab\";\nimport { structure_matchup_data, MatchupTab } from \"./MatchTab\";\nimport { structure_powerrankings_data } from \"./PowerRankingsTab\";\n\nexport const hockey_nhl_stats_ob = {\n  status: {\n    matchup: \"not_loaded\",\n    injuries: \"not_loaded\",\n    odds: \"not_loaded\",\n    trends: \"not_loaded\",\n    streaks: \"not_loaded\",\n    powerrankings: \"not_loaded\",\n  },\n  configs: {\n    odds:{\n      apis: [\n        \"https://spreadsheets.google.com/feeds/list/1dEWChz8nDCVa1tmIi2QuUSzuYD2ZHQ1th2ZvUW5OKto/5/public/values?alt=json\",\n      ],\n      structure_data: structure_odds_data,\n    },\n    injuries: {\n      apis: [\n        \"https://spreadsheets.google.com/feeds/list/1dEWChz8nDCVa1tmIi2QuUSzuYD2ZHQ1th2ZvUW5OKto/4/public/values?alt=json\",\n      ],\n      structure_data: structure_injuries_data,\n    },\n    streaks: {\n      apis: [\n        \"https://spreadsheets.google.com/feeds/list/1dEWChz8nDCVa1tmIi2QuUSzuYD2ZHQ1th2ZvUW5OKto/7/public/values?alt=json\",\n      ],\n      structure_data: structure_streaks_data,\n    },\n    trends: {\n      apis: [\n        \"https://spreadsheets.google.com/feeds/list/1dEWChz8nDCVa1tmIi2QuUSzuYD2ZHQ1th2ZvUW5OKto/6/public/values?alt=json\",\n      ],\n      structure_data: structure_trends_data,\n    },\n    matchup: {\n      apis: [\n        \"https://spreadsheets.google.com/feeds/list/1dEWChz8nDCVa1tmIi2QuUSzuYD2ZHQ1th2ZvUW5OKto/1/public/values?alt=json\",\n        \"https://spreadsheets.google.com/feeds/list/1dEWChz8nDCVa1tmIi2QuUSzuYD2ZHQ1th2ZvUW5OKto/2/public/values?alt=json\",\n      ],\n      structure_data: structure_matchup_data,\n    },\n    powerrankings:{\n      apis: [\n        \"https://spreadsheets.google.com/feeds/list/1dEWChz8nDCVa1tmIi2QuUSzuYD2ZHQ1th2ZvUW5OKto/2/public/values?alt=json\",\n      ],\n      structure_data: structure_powerrankings_data\n    }\n  },\n  tabs:[\n    {title: 'matchup', component: MatchupTab},\n    {title: 'odds', component: OddsTab},\n    {title: 'trends', component: TrendsTab},\n    {title: 'injuries', component: InjuriesTab},\n    {title: 'streaks', component: StreaksTab},\n  ]\n}","import { combineReducers } from \"redux\"\nimport { teamStatsReducer } from \"./teamStatsReducer\"\n\nconst rootReducer = combineReducers({\n  teamStats: teamStatsReducer,\n})\n\nexport default rootReducer","import React from 'react'\nimport { withRouter } from 'react-router-dom'\n\nclass ScrollToTop extends React.Component {\n  componentDidUpdate(prevProps) {\n    if (this.props.location !== prevProps.location) {\n      window.scrollTo(0, 0)\n    }\n  }\n\n  render() {\n    return this.props.children\n  }\n}\n\nexport default withRouter(ScrollToTop)","//importing defaults\n//----------------------------------------------------------\nimport React, { Children } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\n//importing 'redux': Redux Store\n//createStore: create our redux store\n//applyMiddleware: extend Redux with custom functionality\nimport { createStore, applyMiddleware, compose } from 'redux';\n \n//importing 'react-redux': binding layer between the store and the dom\n//Provider: makes our store available to be used in our components\nimport { Provider, useSelector } from \"react-redux\";\n// import { Provider } from \"react-redux\";\n//----------------------------------------------------------\n\n\n//Reducers: handles the store opertations and data mutations\n//import rootReducer \nimport  rootReducer from './store/reducers/rootReducer';\n\n//import thunk\n//thunk: is a middleware that allows us to return a function instead of an action-creator\n//these asynchronous funcitons send a call do the processing and then dispatch a synchronous action \nimport thunk from 'redux-thunk';\nimport { BrowserRouter } from 'react-router-dom';\nimport ScrollToTop from './components/ScrollToTop';\n\n\n//firebase\n//----------------------------------------------------------\n//importing Firebase \n\n\n//importing react-redux-firebase\n//ReactReduxFirebaseProvider: lets rrfProps(store content from firebase) be available to our redux store\n//getFirebase: used to manipulate data in firebase\n//isLoaded: hepler funciton, detects if data from redux state has been loaded or not\n// import { ReactReduxFirebaseProvider, getFirebase, isLoaded, firebaseConnect  } from \"react-redux-firebase\";\n\n//importing redux-firestore\n//createFirestoreInstance: in v3.0.0 version this is introduced that is passed in rrfProps\n//getFirestore: used to manipulate data in firestore\n//reduxFirestore: v2.0.0 way to firebase-store-enhancer\n// import { createFirestoreInstance, getFirestore, reduxFirestore } from 'redux-firestore'\n\n// import firebase from \"./config/FirebaseConfig\";\n// import LoadingFullScreen from './components/LoadingFullScreen';\n//----------------------------------------------------------\n\n//store\n//----------------------------------------------------------\n//create store\n//createStore( reducer, store-enhancer ) \n//[OR]  createStore( reducer, compose(...multiple-store-enhancers) ) \n//compose: use to apply multiple store enhancer. (programmatic utility)\n//thunk.withExtraArgument(object of store-enhacer): adds these encapsulated  store-enhancers as an extra-argument to the reducer\n//reduxFirestore(firebase): adds store-enhancer of Firestore \n\nexport const store = createStore(\n  rootReducer, \n  compose(\n    applyMiddleware(thunk),\n    // reduxFirestore(firebase)\n  )\n);\n\n//react-redux-firebase-configuration of store\n// const rrfConfig = {\n//   userProfile: 'users',\n//   useFirestoreForProfile: true\n// }\n//react-redux-firebase-props the actual contents of the store from firebase\n// const rrfProps = {\n//   firebase,\n//   config:   rrfConfig,\n//   dispatch: store.dispatch,\n//   createFirestoreInstance\n// }\n//----------------------------------------------------------\n\n//wait to load\n//----------------------------------------------------------\n// const AuthIsLoaded = ( {children} )=>{\n//   const auth = useSelector( state=>state.firebase.auth );\n//   if(!isLoaded(auth)) return (<LoadingFullScreen /> );\n//   return children;\n// }\n//----------------------------------------------------------\n\n//we are rendering our web app accordingly to the dom\n//----------------------------------------------------------\nReactDOM.render(\n  \n  <Provider store={store}>\n    {/* <ReactReduxFirebaseProvider {...rrfProps}> */}\n      {/* <AuthIsLoaded> */}\n      <BrowserRouter>\n        <ScrollToTop>\n          <App />\n        </ScrollToTop>\n      </BrowserRouter>\n      {/* </AuthIsLoaded> */}\n    {/* </ReactReduxFirebaseProvider> */}\n  </Provider>\n\n  ,document.getElementById('root')\n);\n//----------------------------------------------------------\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.register();"],"sourceRoot":""}